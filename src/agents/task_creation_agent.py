from src.task_manager import TaskManager
from .base_agent import BaseAgent
import openai
from typing import Dict, List

class TaskCreationAgent(BaseAgent):
    
    def create_tasks(self, objective: str, result: Dict, task_description: str, task_manager: TaskManager) -> List[Dict]:
        """
        Create tasks using the task_creation agent.

        :param objective: The objective for the task_creation agent.
        :param result: A dictionary containing the result of the last completed task.
        :param task_description: The task description for the last completed task.
        :param task_manager: An instance of the TaskManager class.
        :return: A list of new tasks generated by the agent.
        """
        task_list = self._get_task_list(task_manager)
        response_text = super().__call__(objective=objective, result=result, task_description=task_description, task_list=', '.join(task_list))
        
        return self._parse_response(response_text)

    @staticmethod
    def _get_task_list(task_manager: TaskManager) -> List[str]:
        """
        Get task list from the task manager.

        :param task_manager: An instance of the TaskManager class.
        :return: List of task names.
        """
        return [t["task_name"] for t in task_manager.task_list]

    @staticmethod
    def _parse_response(response_text: str) -> List[Dict]:
        """
        Parse the response text from the task_creation agent.

        :param response_text: The response text returned by the task_creation agent.
        :return: A list of dictionaries containing task_name.
        """
        new_tasks = response_text.split('\n')
        return [{"task_name": task_name} for task_name in new_tasks]
    

    def _call(self, objective: str, result: Dict, task_description: str, task_list: str) -> str:
        """
        Call the AI model with the given parameters.

        :param objective: The objective for the task_creation agent.
        :param result: A dictionary containing the result of the last completed task.
        :param task_description: The task description for the last completed task.
        :param task_list: A string containing the list of task names.
        :return: The response text from the AI model.
        """
        return super()._call(objective=objective, result=result, task_description=task_description, task_list=task_list)
    

    